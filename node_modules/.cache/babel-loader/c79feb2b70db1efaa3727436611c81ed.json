{"ast":null,"code":"import _regeneratorRuntime from \"/Users/wen/kryptocamp-v3-w4-homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/wen/kryptocamp-v3-w4-homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"/Users/wen/kryptocamp-v3-w4-homework/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/wen/kryptocamp-v3-w4-homework/src/pages/EntryAssignment.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useContext, useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Layout from \"../components/Layout\";\nimport { BlockchainContext } from \"../contexts/BlockchainContext\"; // 請至 Rinkeby Etherscan 找到合約 ABI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar contractAddress = \"0xa680F60AD58000F87Cdf9EA94A5c68ac8583c6EB\";\nvar contractABI = [{\n  \"inputs\": [],\n  \"name\": \"counter\",\n  \"outputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"inputs\": [],\n  \"name\": \"setIncrement\",\n  \"outputs\": [],\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}];\n\nvar EntryAssignment = function EntryAssignment() {\n  _s();\n\n  var _useContext = useContext(BlockchainContext),\n      currentAccount = _useContext.currentAccount,\n      provider = _useContext.provider,\n      chainId = _useContext.chainId;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      contract = _useState2[0],\n      setContract = _useState2[1];\n\n  useEffect(function () {\n    /*\n     * 請透過 ethers.js 透過 provider, contractAddress 以及 contractABI 建立 Contract 物件\n     * 並將建立好的 Contract 設定在上方事先寫好的 contract state\n     * 注意: 為了確保底下呼叫智能合約方法可以順利進行，請先透過 provider\n     * 1. 取得 signer，將建立好的 Contract 物件透過 connect 方法連結 signer\n     * 2. 取得目前 block (區塊) 中的 gas fee，並在建立 Contract 物件的時候帶入 gasLimit 參數\n     * 參考資料: https://docs.ethers.io/v5/getting-started/#getting-started--contracts\n     */\n    if (provider) {\n      var signer = provider.getSigner();\n      provider.getBlock().then(function (block) {\n        var _contract = new ethers.Contract(contractAddress, contractABI, provider, {\n          gasLimit: block.gasLimit\n        });\n\n        setContract(_contract.connect(signer));\n      });\n    }\n  }, [provider]);\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      counter = _useState4[0],\n      setCounter = _useState4[1];\n\n  useEffect(function () {\n    /*\n     * 請在此處判斷:\n     * 當 contract state 有物件之後，透過 contract state，跟智能合約取得 counter 的值\n     * 並且儲存上方的 counter state 中\n     * 如果寫成功，則 <div>counter: {counter}</div> 處就會顯示 counter 的數值\n     * 提示: 透過 ethers.js 取得的 counter 數值為 bigNumber，請想辦法轉換成數字或是字串\n     */\n    var getData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _count;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return contract.counter();\n\n              case 2:\n                _count = _context.sent;\n                setCounter(_count.toString());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    if (contract) {\n      getData();\n    }\n  }, [contract]);\n\n  var onIncrement = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!contract) {\n                _context2.next = 3;\n                break;\n              }\n\n              _context2.next = 3;\n              return contract.setIncrement({\n                from: currentAccount.address\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onIncrement() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    /*\n     * 加分項目:\n     * 請透過 window.setInterval 自動透過 contract 物件每一秒鐘自動取得 counter 的數值\n     * 並且儲存上方的 counter state 中\n     * 如果寫成功，則點擊 counter + 1 按鈕時成功後過數秒鐘後，counter 數值會產生變化\n     * 注意: 由於開發時頁面會重新刷新，會導致 setInterval 無法清除，因此請透過 useEffect 中的 return 清除 setInterval\n     * 參考資料: https://developer.mozilla.org/zh-TW/docs/Web/API/setInterval\n     */\n    if (contract) {\n      var _intervalId = window.setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _count;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return contract.counter();\n\n              case 2:\n                _count = _context3.sent;\n                setCounter(_count.toString());\n                console.log(counter);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })), 1000);\n    }\n\n    return function () {\n      clearInterval(intervalId);\n    };\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u57FA\\u790E\\u4F5C\\u696D: Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u9322\\u5305\\u5730\\u5740\\uFF1A\", currentAccount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u93C8\\u4E0A\\u8CC7\\u6599:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [\"counter: \", counter]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onIncrement,\n          children: \"counter + 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Chain ID: \", chainId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(EntryAssignment, \"v/bcYEyUSxYtkScXR/TUf7AVpmU=\");\n\n_c = EntryAssignment;\nexport default EntryAssignment;\n\nvar _c;\n\n$RefreshReg$(_c, \"EntryAssignment\");","map":{"version":3,"names":["useContext","useState","useEffect","ethers","Layout","BlockchainContext","contractAddress","contractABI","EntryAssignment","currentAccount","provider","chainId","contract","setContract","signer","getSigner","getBlock","then","block","_contract","Contract","gasLimit","connect","counter","setCounter","getData","_count","toString","onIncrement","setIncrement","from","address","intervalId","window","setInterval","console","log","clearInterval"],"sources":["/Users/wen/kryptocamp-v3-w4-homework/src/pages/EntryAssignment.jsx"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\";\nimport { ethers } from \"ethers\";\nimport Layout from \"../components/Layout\";\nimport { BlockchainContext } from \"../contexts/BlockchainContext\";\n\n// 請至 Rinkeby Etherscan 找到合約 ABI\nconst contractAddress = \"0xa680F60AD58000F87Cdf9EA94A5c68ac8583c6EB\";\nconst contractABI = [{\"inputs\":[],\"name\":\"counter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setIncrement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}];\n\nconst EntryAssignment = () => {\n  const { currentAccount, provider, chainId } = useContext(BlockchainContext);\n  const [contract, setContract] = useState();\n  useEffect(() => {\n    /*\n     * 請透過 ethers.js 透過 provider, contractAddress 以及 contractABI 建立 Contract 物件\n     * 並將建立好的 Contract 設定在上方事先寫好的 contract state\n     * 注意: 為了確保底下呼叫智能合約方法可以順利進行，請先透過 provider\n     * 1. 取得 signer，將建立好的 Contract 物件透過 connect 方法連結 signer\n     * 2. 取得目前 block (區塊) 中的 gas fee，並在建立 Contract 物件的時候帶入 gasLimit 參數\n     * 參考資料: https://docs.ethers.io/v5/getting-started/#getting-started--contracts\n     */\n\n    if (provider) {\n      const signer = provider.getSigner();\n  \n      provider.getBlock().then(block => {\n        const _contract = new ethers.Contract(contractAddress, contractABI, provider, { \n          gasLimit: block.gasLimit\n        });\n        setContract(_contract.connect(signer));\n      })\n    }\n  }, [provider]);\n\n  const [counter, setCounter] = useState();\n\n  useEffect(() => {\n    /*\n     * 請在此處判斷:\n     * 當 contract state 有物件之後，透過 contract state，跟智能合約取得 counter 的值\n     * 並且儲存上方的 counter state 中\n     * 如果寫成功，則 <div>counter: {counter}</div> 處就會顯示 counter 的數值\n     * 提示: 透過 ethers.js 取得的 counter 數值為 bigNumber，請想辦法轉換成數字或是字串\n     */\n\n    const getData = async () => {\n      const _count = await contract.counter()\n      setCounter(_count.toString())\n    }\n\n    if (contract) {\n      getData()\n    }\n  }, [contract]);\n\n  const onIncrement = async () => {\n    /*\n     * 請在此處透過 contract 物件，向智能合約呼叫 setIncrement 方法\n     * 並且將目前錢包地址帶入 from 參數\n     * 如果寫成功，則點擊 counter + 1 按鈕時，狐狸錢包會跳出交易資訊\n     */\n\n    if (contract) {\n      await contract.setIncrement({ from: currentAccount.address }); \n      \n      // 參考: https://docs.ethers.io/v5/api/contract/contract/\n     }\n  };\n\n  useEffect(() => {\n    /*\n     * 加分項目:\n     * 請透過 window.setInterval 自動透過 contract 物件每一秒鐘自動取得 counter 的數值\n     * 並且儲存上方的 counter state 中\n     * 如果寫成功，則點擊 counter + 1 按鈕時成功後過數秒鐘後，counter 數值會產生變化\n     * 注意: 由於開發時頁面會重新刷新，會導致 setInterval 無法清除，因此請透過 useEffect 中的 return 清除 setInterval\n     * 參考資料: https://developer.mozilla.org/zh-TW/docs/Web/API/setInterval\n     */\n\n    if (contract) {\n      const intervalId = window.setInterval(async () => {\n        \n        const _count = await contract.counter();\n        setCounter(_count.toString());\n\n        console.log(counter);\n      \n      },1000);\n    }\n    return () => {\n      clearInterval(intervalId);\n    }\n\n    \n  }, [contract]);\n\n  return (\n    <Layout>\n      <h1>基礎作業: Counter</h1>\n\n      <div>\n        <div>錢包地址：{currentAccount}</div>\n        <div>鏈上資料:</div>\n        <div className=\"my-3\">\n          <div className=\"mb-1\">counter: {counter}</div>\n          <button onClick={onIncrement}>counter + 1</button>\n          <div>Chain ID: {chainId}</div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default EntryAssignment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}